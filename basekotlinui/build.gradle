plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.soul.basekotlinui'
    compileSdk 34

    defaultConfig {
        minSdk 21
        versionCode 1002
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }

    def SDK_BASENAME = "BaseKotlinUI"

    android.libraryVariants.configureEach { variant ->
        variant.outputs.all {

            def fileName = SDK_BASENAME + "_" + name + "_" + defaultConfig.versionName + ".aar"
            outputFileName = fileName
        }
    }


    def sdkDestinationPath = "../out/libs/"
    def zipFile = file("$buildDir/tmp/kotlin-classes/release/")
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    task deleteBuild(type: Delete) {
        delete sdkDestinationPath + SDK_BASENAME + ".jar"
    }
    task makeJar(type: Jar) {
        // 指定输出目录
        destinationDirectory = file("$buildDir/libs")

        // 包含 Kotlin 和 Java 编译后的类文件
        from("$buildDir/tmp/kotlin-classes/release/")

        // 包含资源文件
        include('**/*.class')
        include('**/*.properties') // 如果有额外的资源文件
        // 自定义 JAR 文件名称
        archiveBaseName =SDK_BASENAME // 自定义文件名的基础部分
        archiveVersion = defaultConfig.versionName // 使用模块的版本号


    }
    makeJar.dependsOn(deleteBuild, build)

}

dependencies {

    implementation libs.androidx.core.ktx
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation project(':javalib')
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}